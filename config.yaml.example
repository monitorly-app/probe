# Example configuration file for the Monitorly probe
# Copy this file to config.yaml and adjust the values according to your needs

# Optional: Machine name to differentiate metrics from different servers
# If not specified, the system hostname will be used
machine_name: ""

# Collection configuration
collection:
  # CPU metrics collection
  cpu:
    enabled: true
    interval: 30s

  # RAM metrics collection
  ram:
    enabled: true
    interval: 30s

  # Disk metrics collection
  disk:
    enabled: true
    interval: 60s
    mount_points:
      - path: "/"
        label: "root"
        collect_usage: true
        collect_percent: true
      - path: "/home"
        label: "home"
        collect_usage: true
        collect_percent: true

  # Service monitoring
  service:
    enabled: true
    interval: 60s
    services:
      - name: "nginx"
        label: "Nginx Web Server"
      - name: "postgresql"
        label: "PostgreSQL Database"

  # User activity monitoring
  user_activity:
    enabled: true
    interval: 60s

  # Login failures monitoring
  login_failures:
    enabled: true
    interval: 60s

  # Port monitoring
  port:
    enabled: true
    interval: 60s

# Sender configuration
sender:
  # Target can be either "api" or "log_file"
  target: "api"
  # How often to send collected metrics
  send_interval: 5m

# API configuration (required if sender.target is "api")
api:
  # API endpoint URL
  url: "https://api.monitorly.io"
  # Your organization ID (UUID)
  organization_id: ""
  # Your server ID (UUID)
  server_id: ""
  # Your application token for authentication
  application_token: ""
  # Optional: Encryption key for request body (requires premium subscription)
  # Must be exactly 32 bytes long if specified
  encryption_key: ""

# Log file configuration (required if sender.target is "log_file")
log_file:
  # Path to the metrics log file
  path: "logs/metrics.log"

# Application logging configuration
logging:
  # Path to the application log file
  file_path: "logs/monitorly.log"

# Update configuration
updates:
  # Whether to enable automatic updates
  enabled: true
  # Time of day to check for updates (HH:MM format)
  check_time: "03:00"
  # How long to wait before retrying after a failed update
  retry_delay: 1h